logging:
  level:
    com.mladen.cikara.oauth2: debug
    org.springfremework: info

management:
  endpoints:
    web:
      exposure:
        include: "*"

server:
  port: 8443
  ssl:
    key-store: classpath:keystore.p12
    key-store-password: mladen
    keyStoreType: PKCS12
    keyAlias: tomcat

spring:
  datasource:
    url: jdbc:postgresql://localhost/oauth2
    username: oauth2user
    password: oauth2user
  flyway:
    user: oauth2
    password: oauth2
    validate-on-migrate: true
  jackson: 
    default-property-inclusion: NON_NULL
    deserialization: 
      unwrap-root-value: true
  jpa:
#    generate-ddl: true
    properties:
      hibernate.ddl-auto: validate # Use this when using flyway for database creation
#      hibernate.ddl-auto: create # Use this to see what would Hibernate create in database.
      hibernate.temp.use_jdbc_metadata_defaults: false # this removes warning "java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented."
      hibernate.use_sql_comments: true
      hibernate.format_sql: true
      hibernate.type: trace # log sql values
    show-sql: true
  security:
    user:
      password: 44947188-6f69-44f9-a8c3-315dab31ec89

security:
  oauth2:
    authorization:
      token-key-access: "isAuthenticated()"
    client:
      client-id: d4486b29-7f28-43db-8d4e-44df6b5785c9
      client-secret: a6f59937-fc55-485c-bf91-c8bcdaae2e45
      authorized-grant-types: authorization_code, password, client_credentials, implicit, refresh_token

       